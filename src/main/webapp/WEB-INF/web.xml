<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--配置前端控制器-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--配置初始化参数(加载mvc配置文件)-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        <!--配置此servletz在服务器开启时创建-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--
        配置监听器ContextLoaderListener
        服务器启动时会创建ServletContext域对象并去加载springMVC.xml
        此监听器会监听ServletContext对象的创建和销毁
        为了让服务器启动的同时将spring的配置文件也加载(就能在Controlelr方法中调用ioc容器中创建的业务层和dao层对象的方法)，
        向此监听器配置初始化文件参数
        默认情况：配置此监听器默认会去WEB-INF/下加载applicationContext.xml，不存在则报错
        spring配置文件加载后会保存在WebApplicationContext类对象中，它是ApplicationContxet的子类
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--<param-value>classpath:applicationContext.xml</param-value>-->
        <!--使用整合后的配置文件-->
        <param-value>classpath:spring-mybatis.xml</param-value>
    </context-param>

    <!--配置解决中文乱码的过滤器-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>